---
import Header from '../components/Header.astro';
import '@fontsource-variable/onest'
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<Header />
		<slot />
		<button id="theme-toggle" class="fixed bottom-4 right-4 px-4 py-2 bg-gray-200 dark:bg-gray-800 text-black dark:text-white rounded">Toggle Theme</button>
	</body>
</html>
<style is:global>
	:root {
		color-scheme: light dark;
	}
	html {
		font-family: 'Onest', sans-serif;

	}
	body {
		height: 100vh;
		transition: background-color 0.3s, color 0.3s;
	}
	/* Modo claro */
	body.light {
		background-color: #ffffff;
		color: #000000;
	}
	/* Modo oscuro */
	body.dark {
		background-color: #000000;
		color: #ffffff;
	}
</style>


<script>
	// Cambiar entre modos claro y oscuro
	const themeToggleButton = document.getElementById('theme-toggle');
	const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');

	// Establecer tema inicial basado en la preferencia guardada o el sistema operativo
	const currentTheme = localStorage.getItem('theme') || (prefersDarkScheme.matches ? 'dark' : 'light');
	document.body.classList.toggle(currentTheme);

	// Alternar el tema cuando se presiona el botÃ³n
	themeToggleButton.addEventListener('click', () => {
		const isDarkMode = document.body.classList.toggle('dark');
		document.body.classList.toggle('light', !isDarkMode);

		// Guardar la preferencia en localStorage
		localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');
	});
</script>